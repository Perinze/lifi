ARM GAS  /tmp/cc9GEf8S.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC3_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC3_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC3_Init:
  27              	.LFB320:
  28              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** #include <stdio.h>
  25:Core/Src/adc.c **** #include "usart.h"
  26:Core/Src/adc.c **** #include "tim.h"
  27:Core/Src/adc.c **** #include "main.h"
  28:Core/Src/adc.c **** /* USER CODE END 0 */
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** ADC_HandleTypeDef hadc3;
ARM GAS  /tmp/cc9GEf8S.s 			page 2


  31:Core/Src/adc.c **** 
  32:Core/Src/adc.c **** /* ADC3 init function */
  33:Core/Src/adc.c **** void MX_ADC3_Init(void)
  34:Core/Src/adc.c **** {
  29              		.loc 1 34 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 0 */
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  40              		.loc 1 40 3 view .LVU1
  41              		.loc 1 40 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0093     		str	r3, [sp]
  44 0008 0193     		str	r3, [sp, #4]
  45 000a 0293     		str	r3, [sp, #8]
  46 000c 0393     		str	r3, [sp, #12]
  47 000e 0493     		str	r3, [sp, #16]
  48 0010 0593     		str	r3, [sp, #20]
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 1 */
  45:Core/Src/adc.c **** 
  46:Core/Src/adc.c ****   /** Common config
  47:Core/Src/adc.c ****   */
  48:Core/Src/adc.c ****   hadc3.Instance = ADC3;
  49              		.loc 1 48 3 is_stmt 1 view .LVU3
  50              		.loc 1 48 18 is_stmt 0 view .LVU4
  51 0012 1948     		ldr	r0, .L7
  52 0014 194A     		ldr	r2, .L7+4
  53 0016 0260     		str	r2, [r0]
  49:Core/Src/adc.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  54              		.loc 1 49 3 is_stmt 1 view .LVU5
  55              		.loc 1 49 29 is_stmt 0 view .LVU6
  56 0018 4360     		str	r3, [r0, #4]
  50:Core/Src/adc.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
  57              		.loc 1 50 3 is_stmt 1 view .LVU7
  58              		.loc 1 50 25 is_stmt 0 view .LVU8
  59 001a 8360     		str	r3, [r0, #8]
  51:Core/Src/adc.c ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  60              		.loc 1 51 3 is_stmt 1 view .LVU9
  61              		.loc 1 51 24 is_stmt 0 view .LVU10
  62 001c C360     		str	r3, [r0, #12]
  52:Core/Src/adc.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
  63              		.loc 1 52 3 is_stmt 1 view .LVU11
ARM GAS  /tmp/cc9GEf8S.s 			page 3


  64              		.loc 1 52 27 is_stmt 0 view .LVU12
  65 001e 0361     		str	r3, [r0, #16]
  53:Core/Src/adc.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  66              		.loc 1 53 3 is_stmt 1 view .LVU13
  67              		.loc 1 53 27 is_stmt 0 view .LVU14
  68 0020 0422     		movs	r2, #4
  69 0022 4261     		str	r2, [r0, #20]
  54:Core/Src/adc.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
  70              		.loc 1 54 3 is_stmt 1 view .LVU15
  71              		.loc 1 54 31 is_stmt 0 view .LVU16
  72 0024 0376     		strb	r3, [r0, #24]
  55:Core/Src/adc.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
  73              		.loc 1 55 3 is_stmt 1 view .LVU17
  74              		.loc 1 55 33 is_stmt 0 view .LVU18
  75 0026 4376     		strb	r3, [r0, #25]
  56:Core/Src/adc.c ****   hadc3.Init.NbrOfConversion = 1;
  76              		.loc 1 56 3 is_stmt 1 view .LVU19
  77              		.loc 1 56 30 is_stmt 0 view .LVU20
  78 0028 0122     		movs	r2, #1
  79 002a C261     		str	r2, [r0, #28]
  57:Core/Src/adc.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
  80              		.loc 1 57 3 is_stmt 1 view .LVU21
  81              		.loc 1 57 36 is_stmt 0 view .LVU22
  82 002c 80F82030 		strb	r3, [r0, #32]
  58:Core/Src/adc.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  83              		.loc 1 58 3 is_stmt 1 view .LVU23
  84              		.loc 1 58 31 is_stmt 0 view .LVU24
  85 0030 8362     		str	r3, [r0, #40]
  59:Core/Src/adc.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  86              		.loc 1 59 3 is_stmt 1 view .LVU25
  87              		.loc 1 59 35 is_stmt 0 view .LVU26
  88 0032 C362     		str	r3, [r0, #44]
  60:Core/Src/adc.c ****   hadc3.Init.DMAContinuousRequests = DISABLE;
  89              		.loc 1 60 3 is_stmt 1 view .LVU27
  90              		.loc 1 60 36 is_stmt 0 view .LVU28
  91 0034 80F83030 		strb	r3, [r0, #48]
  61:Core/Src/adc.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  92              		.loc 1 61 3 is_stmt 1 view .LVU29
  93              		.loc 1 61 22 is_stmt 0 view .LVU30
  94 0038 4363     		str	r3, [r0, #52]
  62:Core/Src/adc.c ****   hadc3.Init.OversamplingMode = DISABLE;
  95              		.loc 1 62 3 is_stmt 1 view .LVU31
  96              		.loc 1 62 31 is_stmt 0 view .LVU32
  97 003a 80F83830 		strb	r3, [r0, #56]
  63:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
  98              		.loc 1 63 3 is_stmt 1 view .LVU33
  99              		.loc 1 63 7 is_stmt 0 view .LVU34
 100 003e FFF7FEFF 		bl	HAL_ADC_Init
 101              	.LVL0:
 102              		.loc 1 63 6 view .LVU35
 103 0042 90B9     		cbnz	r0, .L5
 104              	.L2:
  64:Core/Src/adc.c ****   {
  65:Core/Src/adc.c ****     Error_Handler();
  66:Core/Src/adc.c ****   }
  67:Core/Src/adc.c **** 
  68:Core/Src/adc.c ****   /** Configure Regular Channel
ARM GAS  /tmp/cc9GEf8S.s 			page 4


  69:Core/Src/adc.c ****   */
  70:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 105              		.loc 1 70 3 is_stmt 1 view .LVU36
 106              		.loc 1 70 19 is_stmt 0 view .LVU37
 107 0044 0E4B     		ldr	r3, .L7+8
 108 0046 0093     		str	r3, [sp]
  71:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 109              		.loc 1 71 3 is_stmt 1 view .LVU38
 110              		.loc 1 71 16 is_stmt 0 view .LVU39
 111 0048 0623     		movs	r3, #6
 112 004a 0193     		str	r3, [sp, #4]
  72:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 113              		.loc 1 72 3 is_stmt 1 view .LVU40
 114              		.loc 1 72 24 is_stmt 0 view .LVU41
 115 004c 0023     		movs	r3, #0
 116 004e 0293     		str	r3, [sp, #8]
  73:Core/Src/adc.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 117              		.loc 1 73 3 is_stmt 1 view .LVU42
 118              		.loc 1 73 22 is_stmt 0 view .LVU43
 119 0050 7F22     		movs	r2, #127
 120 0052 0392     		str	r2, [sp, #12]
  74:Core/Src/adc.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 121              		.loc 1 74 3 is_stmt 1 view .LVU44
 122              		.loc 1 74 24 is_stmt 0 view .LVU45
 123 0054 0422     		movs	r2, #4
 124 0056 0492     		str	r2, [sp, #16]
  75:Core/Src/adc.c ****   sConfig.Offset = 0;
 125              		.loc 1 75 3 is_stmt 1 view .LVU46
 126              		.loc 1 75 18 is_stmt 0 view .LVU47
 127 0058 0593     		str	r3, [sp, #20]
  76:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 128              		.loc 1 76 3 is_stmt 1 view .LVU48
 129              		.loc 1 76 7 is_stmt 0 view .LVU49
 130 005a 6946     		mov	r1, sp
 131 005c 0648     		ldr	r0, .L7
 132 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 133              	.LVL1:
 134              		.loc 1 76 6 view .LVU50
 135 0062 28B9     		cbnz	r0, .L6
 136              	.L1:
  77:Core/Src/adc.c ****   {
  78:Core/Src/adc.c ****     Error_Handler();
  79:Core/Src/adc.c ****   }
  80:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 2 */
  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 2 */
  83:Core/Src/adc.c **** 
  84:Core/Src/adc.c **** }
 137              		.loc 1 84 1 view .LVU51
 138 0064 07B0     		add	sp, sp, #28
 139              	.LCFI2:
 140              		.cfi_remember_state
 141              		.cfi_def_cfa_offset 4
 142              		@ sp needed
 143 0066 5DF804FB 		ldr	pc, [sp], #4
 144              	.L5:
 145              	.LCFI3:
ARM GAS  /tmp/cc9GEf8S.s 			page 5


 146              		.cfi_restore_state
  65:Core/Src/adc.c ****   }
 147              		.loc 1 65 5 is_stmt 1 view .LVU52
 148 006a FFF7FEFF 		bl	Error_Handler
 149              	.LVL2:
 150 006e E9E7     		b	.L2
 151              	.L6:
  78:Core/Src/adc.c ****   }
 152              		.loc 1 78 5 view .LVU53
 153 0070 FFF7FEFF 		bl	Error_Handler
 154              	.LVL3:
 155              		.loc 1 84 1 is_stmt 0 view .LVU54
 156 0074 F6E7     		b	.L1
 157              	.L8:
 158 0076 00BF     		.align	2
 159              	.L7:
 160 0078 00000000 		.word	.LANCHOR0
 161 007c 00020450 		.word	1342439936
 162 0080 02003004 		.word	70254594
 163              		.cfi_endproc
 164              	.LFE320:
 166              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 167              		.align	1
 168              		.global	HAL_ADC_MspInit
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	HAL_ADC_MspInit:
 175              	.LVL4:
 176              	.LFB321:
  85:Core/Src/adc.c **** 
  86:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  87:Core/Src/adc.c **** {
 177              		.loc 1 87 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 168
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		.loc 1 87 1 is_stmt 0 view .LVU56
 182 0000 10B5     		push	{r4, lr}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 187 0002 AAB0     		sub	sp, sp, #168
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 176
 190 0004 0446     		mov	r4, r0
  88:Core/Src/adc.c **** 
  89:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 191              		.loc 1 89 3 is_stmt 1 view .LVU57
 192              		.loc 1 89 20 is_stmt 0 view .LVU58
 193 0006 0021     		movs	r1, #0
 194 0008 2591     		str	r1, [sp, #148]
 195 000a 2691     		str	r1, [sp, #152]
 196 000c 2791     		str	r1, [sp, #156]
 197 000e 2891     		str	r1, [sp, #160]
ARM GAS  /tmp/cc9GEf8S.s 			page 6


 198 0010 2991     		str	r1, [sp, #164]
  90:Core/Src/adc.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 199              		.loc 1 90 3 is_stmt 1 view .LVU59
 200              		.loc 1 90 28 is_stmt 0 view .LVU60
 201 0012 8822     		movs	r2, #136
 202 0014 03A8     		add	r0, sp, #12
 203              	.LVL5:
 204              		.loc 1 90 28 view .LVU61
 205 0016 FFF7FEFF 		bl	memset
 206              	.LVL6:
  91:Core/Src/adc.c ****   if(adcHandle->Instance==ADC3)
 207              		.loc 1 91 3 is_stmt 1 view .LVU62
 208              		.loc 1 91 15 is_stmt 0 view .LVU63
 209 001a 2268     		ldr	r2, [r4]
 210              		.loc 1 91 5 view .LVU64
 211 001c 224B     		ldr	r3, .L15
 212 001e 9A42     		cmp	r2, r3
 213 0020 01D0     		beq	.L13
 214              	.LVL7:
 215              	.L9:
  92:Core/Src/adc.c ****   {
  93:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 0 */
  94:Core/Src/adc.c **** 
  95:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 0 */
  96:Core/Src/adc.c **** 
  97:Core/Src/adc.c ****   /** Initializes the peripherals clock
  98:Core/Src/adc.c ****   */
  99:Core/Src/adc.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 100:Core/Src/adc.c ****     PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 101:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_HSI;
 102:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 103:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 104:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 105:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 106:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 107:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 108:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 109:Core/Src/adc.c ****     {
 110:Core/Src/adc.c ****       Error_Handler();
 111:Core/Src/adc.c ****     }
 112:Core/Src/adc.c **** 
 113:Core/Src/adc.c ****     /* ADC3 clock enable */
 114:Core/Src/adc.c ****     __HAL_RCC_ADC_CLK_ENABLE();
 115:Core/Src/adc.c **** 
 116:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 117:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 118:Core/Src/adc.c ****     PC0     ------> ADC3_IN1
 119:Core/Src/adc.c ****     */
 120:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 121:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 122:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 123:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 124:Core/Src/adc.c **** 
 125:Core/Src/adc.c ****     /* ADC3 interrupt Init */
 126:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC3_IRQn, 0, 0);
 127:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC3_IRQn);
 128:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
ARM GAS  /tmp/cc9GEf8S.s 			page 7


 129:Core/Src/adc.c **** 
 130:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 1 */
 131:Core/Src/adc.c ****   }
 132:Core/Src/adc.c **** }
 216              		.loc 1 132 1 view .LVU65
 217 0022 2AB0     		add	sp, sp, #168
 218              	.LCFI6:
 219              		.cfi_remember_state
 220              		.cfi_def_cfa_offset 8
 221              		@ sp needed
 222 0024 10BD     		pop	{r4, pc}
 223              	.LVL8:
 224              	.L13:
 225              	.LCFI7:
 226              		.cfi_restore_state
  99:Core/Src/adc.c ****     PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 227              		.loc 1 99 5 is_stmt 1 view .LVU66
  99:Core/Src/adc.c ****     PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 228              		.loc 1 99 40 is_stmt 0 view .LVU67
 229 0026 4FF48043 		mov	r3, #16384
 230 002a 0393     		str	r3, [sp, #12]
 100:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_HSI;
 231              		.loc 1 100 5 is_stmt 1 view .LVU68
 100:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_HSI;
 232              		.loc 1 100 37 is_stmt 0 view .LVU69
 233 002c 4FF08053 		mov	r3, #268435456
 234 0030 2193     		str	r3, [sp, #132]
 101:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 235              		.loc 1 101 5 is_stmt 1 view .LVU70
 101:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 236              		.loc 1 101 41 is_stmt 0 view .LVU71
 237 0032 0223     		movs	r3, #2
 238 0034 0493     		str	r3, [sp, #16]
 102:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 239              		.loc 1 102 5 is_stmt 1 view .LVU72
 102:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 240              		.loc 1 102 36 is_stmt 0 view .LVU73
 241 0036 0122     		movs	r2, #1
 242 0038 0592     		str	r2, [sp, #20]
 103:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 243              		.loc 1 103 5 is_stmt 1 view .LVU74
 103:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 244              		.loc 1 103 36 is_stmt 0 view .LVU75
 245 003a 0822     		movs	r2, #8
 246 003c 0692     		str	r2, [sp, #24]
 104:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 247              		.loc 1 104 5 is_stmt 1 view .LVU76
 104:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 248              		.loc 1 104 36 is_stmt 0 view .LVU77
 249 003e 0722     		movs	r2, #7
 250 0040 0792     		str	r2, [sp, #28]
 105:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 251              		.loc 1 105 5 is_stmt 1 view .LVU78
 105:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 252              		.loc 1 105 36 is_stmt 0 view .LVU79
 253 0042 0893     		str	r3, [sp, #32]
 106:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
ARM GAS  /tmp/cc9GEf8S.s 			page 8


 254              		.loc 1 106 5 is_stmt 1 view .LVU80
 106:Core/Src/adc.c ****     PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 255              		.loc 1 106 36 is_stmt 0 view .LVU81
 256 0044 0993     		str	r3, [sp, #36]
 107:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 257              		.loc 1 107 5 is_stmt 1 view .LVU82
 107:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 258              		.loc 1 107 43 is_stmt 0 view .LVU83
 259 0046 4FF08073 		mov	r3, #16777216
 260 004a 0A93     		str	r3, [sp, #40]
 108:Core/Src/adc.c ****     {
 261              		.loc 1 108 5 is_stmt 1 view .LVU84
 108:Core/Src/adc.c ****     {
 262              		.loc 1 108 9 is_stmt 0 view .LVU85
 263 004c 03A8     		add	r0, sp, #12
 264 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 265              	.LVL9:
 108:Core/Src/adc.c ****     {
 266              		.loc 1 108 8 view .LVU86
 267 0052 28BB     		cbnz	r0, .L14
 268              	.L11:
 114:Core/Src/adc.c **** 
 269              		.loc 1 114 5 is_stmt 1 view .LVU87
 270              	.LBB2:
 114:Core/Src/adc.c **** 
 271              		.loc 1 114 5 view .LVU88
 114:Core/Src/adc.c **** 
 272              		.loc 1 114 5 view .LVU89
 273 0054 154B     		ldr	r3, .L15+4
 274 0056 DA6C     		ldr	r2, [r3, #76]
 275 0058 42F40052 		orr	r2, r2, #8192
 276 005c DA64     		str	r2, [r3, #76]
 114:Core/Src/adc.c **** 
 277              		.loc 1 114 5 view .LVU90
 278 005e DA6C     		ldr	r2, [r3, #76]
 279 0060 02F40052 		and	r2, r2, #8192
 280 0064 0192     		str	r2, [sp, #4]
 114:Core/Src/adc.c **** 
 281              		.loc 1 114 5 view .LVU91
 282 0066 019A     		ldr	r2, [sp, #4]
 283              	.LBE2:
 114:Core/Src/adc.c **** 
 284              		.loc 1 114 5 view .LVU92
 116:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 285              		.loc 1 116 5 view .LVU93
 286              	.LBB3:
 116:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 287              		.loc 1 116 5 view .LVU94
 116:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 288              		.loc 1 116 5 view .LVU95
 289 0068 DA6C     		ldr	r2, [r3, #76]
 290 006a 42F00402 		orr	r2, r2, #4
 291 006e DA64     		str	r2, [r3, #76]
 116:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 292              		.loc 1 116 5 view .LVU96
 293 0070 DB6C     		ldr	r3, [r3, #76]
 294 0072 03F00403 		and	r3, r3, #4
ARM GAS  /tmp/cc9GEf8S.s 			page 9


 295 0076 0293     		str	r3, [sp, #8]
 116:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 296              		.loc 1 116 5 view .LVU97
 297 0078 029B     		ldr	r3, [sp, #8]
 298              	.LBE3:
 116:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 299              		.loc 1 116 5 view .LVU98
 120:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 300              		.loc 1 120 5 view .LVU99
 120:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 301              		.loc 1 120 25 is_stmt 0 view .LVU100
 302 007a 0123     		movs	r3, #1
 303 007c 2593     		str	r3, [sp, #148]
 121:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 121 5 is_stmt 1 view .LVU101
 121:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 305              		.loc 1 121 26 is_stmt 0 view .LVU102
 306 007e 0B23     		movs	r3, #11
 307 0080 2693     		str	r3, [sp, #152]
 122:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 308              		.loc 1 122 5 is_stmt 1 view .LVU103
 122:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 309              		.loc 1 122 26 is_stmt 0 view .LVU104
 310 0082 0024     		movs	r4, #0
 311              	.LVL10:
 122:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 312              		.loc 1 122 26 view .LVU105
 313 0084 2794     		str	r4, [sp, #156]
 123:Core/Src/adc.c **** 
 314              		.loc 1 123 5 is_stmt 1 view .LVU106
 315 0086 25A9     		add	r1, sp, #148
 316 0088 0948     		ldr	r0, .L15+8
 317 008a FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL11:
 126:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC3_IRQn);
 319              		.loc 1 126 5 view .LVU107
 320 008e 2246     		mov	r2, r4
 321 0090 2146     		mov	r1, r4
 322 0092 2F20     		movs	r0, #47
 323 0094 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 324              	.LVL12:
 127:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 325              		.loc 1 127 5 view .LVU108
 326 0098 2F20     		movs	r0, #47
 327 009a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 328              	.LVL13:
 329              		.loc 1 132 1 is_stmt 0 view .LVU109
 330 009e C0E7     		b	.L9
 331              	.LVL14:
 332              	.L14:
 110:Core/Src/adc.c ****     }
 333              		.loc 1 110 7 is_stmt 1 view .LVU110
 334 00a0 FFF7FEFF 		bl	Error_Handler
 335              	.LVL15:
 336 00a4 D6E7     		b	.L11
 337              	.L16:
 338 00a6 00BF     		.align	2
ARM GAS  /tmp/cc9GEf8S.s 			page 10


 339              	.L15:
 340 00a8 00020450 		.word	1342439936
 341 00ac 00100240 		.word	1073876992
 342 00b0 00080048 		.word	1207961600
 343              		.cfi_endproc
 344              	.LFE321:
 346              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 347              		.align	1
 348              		.global	HAL_ADC_MspDeInit
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu fpv4-sp-d16
 354              	HAL_ADC_MspDeInit:
 355              	.LVL16:
 356              	.LFB322:
 133:Core/Src/adc.c **** 
 134:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 135:Core/Src/adc.c **** {
 357              		.loc 1 135 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		.loc 1 135 1 is_stmt 0 view .LVU112
 362 0000 08B5     		push	{r3, lr}
 363              	.LCFI8:
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 3, -8
 366              		.cfi_offset 14, -4
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c ****   if(adcHandle->Instance==ADC3)
 367              		.loc 1 137 3 is_stmt 1 view .LVU113
 368              		.loc 1 137 15 is_stmt 0 view .LVU114
 369 0002 0268     		ldr	r2, [r0]
 370              		.loc 1 137 5 view .LVU115
 371 0004 084B     		ldr	r3, .L21
 372 0006 9A42     		cmp	r2, r3
 373 0008 00D0     		beq	.L20
 374              	.LVL17:
 375              	.L17:
 138:Core/Src/adc.c ****   {
 139:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 140:Core/Src/adc.c **** 
 141:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 0 */
 142:Core/Src/adc.c ****     /* Peripheral clock disable */
 143:Core/Src/adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
 144:Core/Src/adc.c **** 
 145:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 146:Core/Src/adc.c ****     PC0     ------> ADC3_IN1
 147:Core/Src/adc.c ****     */
 148:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 149:Core/Src/adc.c **** 
 150:Core/Src/adc.c ****     /* ADC3 interrupt Deinit */
 151:Core/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC3_IRQn);
 152:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 153:Core/Src/adc.c **** 
 154:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 1 */
ARM GAS  /tmp/cc9GEf8S.s 			page 11


 155:Core/Src/adc.c ****   }
 156:Core/Src/adc.c **** }
 376              		.loc 1 156 1 view .LVU116
 377 000a 08BD     		pop	{r3, pc}
 378              	.LVL18:
 379              	.L20:
 143:Core/Src/adc.c **** 
 380              		.loc 1 143 5 is_stmt 1 view .LVU117
 381 000c 074A     		ldr	r2, .L21+4
 382 000e D36C     		ldr	r3, [r2, #76]
 383 0010 23F40053 		bic	r3, r3, #8192
 384 0014 D364     		str	r3, [r2, #76]
 148:Core/Src/adc.c **** 
 385              		.loc 1 148 5 view .LVU118
 386 0016 0121     		movs	r1, #1
 387 0018 0548     		ldr	r0, .L21+8
 388              	.LVL19:
 148:Core/Src/adc.c **** 
 389              		.loc 1 148 5 is_stmt 0 view .LVU119
 390 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 391              	.LVL20:
 151:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 392              		.loc 1 151 5 is_stmt 1 view .LVU120
 393 001e 2F20     		movs	r0, #47
 394 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 395              	.LVL21:
 396              		.loc 1 156 1 is_stmt 0 view .LVU121
 397 0024 F1E7     		b	.L17
 398              	.L22:
 399 0026 00BF     		.align	2
 400              	.L21:
 401 0028 00020450 		.word	1342439936
 402 002c 00100240 		.word	1073876992
 403 0030 00080048 		.word	1207961600
 404              		.cfi_endproc
 405              	.LFE322:
 407              		.section	.rodata.HAL_ADC_ConvCpltCallback.str1.4,"aMS",%progbits,1
 408              		.align	2
 409              	.LC0:
 410 0000 25640D0A 		.ascii	"%d\015\012\000"
 410      00
 411              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_ADC_ConvCpltCallback
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv4-sp-d16
 419              	HAL_ADC_ConvCpltCallback:
 420              	.LVL22:
 421              	.LFB323:
 157:Core/Src/adc.c **** 
 158:Core/Src/adc.c **** /* USER CODE BEGIN 1 */
 159:Core/Src/adc.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 160:Core/Src/adc.c **** {
 422              		.loc 1 160 1 is_stmt 1 view -0
 423              		.cfi_startproc
ARM GAS  /tmp/cc9GEf8S.s 			page 12


 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		.loc 1 160 1 is_stmt 0 view .LVU123
 427 0000 10B5     		push	{r4, lr}
 428              	.LCFI9:
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 4, -8
 431              		.cfi_offset 14, -4
 432 0002 82B0     		sub	sp, sp, #8
 433              	.LCFI10:
 434              		.cfi_def_cfa_offset 16
 161:Core/Src/adc.c ****     uint32_t ad_res = HAL_ADC_GetValue(&hadc3);
 435              		.loc 1 161 5 is_stmt 1 view .LVU124
 436              		.loc 1 161 23 is_stmt 0 view .LVU125
 437 0004 3248     		ldr	r0, .L32
 438              	.LVL23:
 439              		.loc 1 161 23 view .LVU126
 440 0006 FFF7FEFF 		bl	HAL_ADC_GetValue
 441              	.LVL24:
 162:Core/Src/adc.c ****     static int start;
 442              		.loc 1 162 5 is_stmt 1 view .LVU127
 163:Core/Src/adc.c ****     static int end;
 443              		.loc 1 163 5 view .LVU128
 164:Core/Src/adc.c ****     /*
 165:Core/Src/adc.c ****       0 idle
 166:Core/Src/adc.c ****       1 wait for posedge
 167:Core/Src/adc.c ****       2 wait for negedge
 168:Core/Src/adc.c ****     */
 169:Core/Src/adc.c ****     static int state = 0;
 444              		.loc 1 169 5 view .LVU129
 170:Core/Src/adc.c ****     static int data = 0;
 445              		.loc 1 170 5 view .LVU130
 171:Core/Src/adc.c **** 
 172:Core/Src/adc.c ****     if (!state && ad_res > LIGHTTH) {
 446              		.loc 1 172 5 view .LVU131
 447              		.loc 1 172 9 is_stmt 0 view .LVU132
 448 000a 324B     		ldr	r3, .L32+4
 449 000c 1B68     		ldr	r3, [r3]
 450              		.loc 1 172 8 view .LVU133
 451 000e 5BB9     		cbnz	r3, .L24
 452              		.loc 1 172 16 discriminator 1 view .LVU134
 453 0010 40F6C413 		movw	r3, #2500
 454 0014 9842     		cmp	r0, r3
 455 0016 07D9     		bls	.L24
 173:Core/Src/adc.c ****       state = 2;
 456              		.loc 1 173 7 is_stmt 1 view .LVU135
 457              		.loc 1 173 13 is_stmt 0 view .LVU136
 458 0018 2E4B     		ldr	r3, .L32+4
 459 001a 0222     		movs	r2, #2
 460 001c 1A60     		str	r2, [r3]
 174:Core/Src/adc.c ****       start = __HAL_TIM_GetCounter(&htim2);
 461              		.loc 1 174 7 is_stmt 1 view .LVU137
 462              		.loc 1 174 15 is_stmt 0 view .LVU138
 463 001e 2E4B     		ldr	r3, .L32+8
 464 0020 1B68     		ldr	r3, [r3]
 465 0022 5A6A     		ldr	r2, [r3, #36]
 466              		.loc 1 174 13 view .LVU139
ARM GAS  /tmp/cc9GEf8S.s 			page 13


 467 0024 2D4B     		ldr	r3, .L32+12
 468 0026 1A60     		str	r2, [r3]
 469              	.L24:
 175:Core/Src/adc.c ****     }
 176:Core/Src/adc.c ****     if (state == 1 && ad_res > LIGHTTH) {
 470              		.loc 1 176 5 is_stmt 1 view .LVU140
 471              		.loc 1 176 15 is_stmt 0 view .LVU141
 472 0028 2A4B     		ldr	r3, .L32+4
 473 002a 1B68     		ldr	r3, [r3]
 474              		.loc 1 176 8 view .LVU142
 475 002c 012B     		cmp	r3, #1
 476 002e 0AD0     		beq	.L29
 477              	.L25:
 177:Core/Src/adc.c ****       state = 2;
 178:Core/Src/adc.c ****       start = __HAL_TIM_GetCounter(&htim2);
 179:Core/Src/adc.c ****     }
 180:Core/Src/adc.c ****     if (state == 2 && ad_res < LIGHTTH) {
 478              		.loc 1 180 5 is_stmt 1 view .LVU143
 479              		.loc 1 180 15 is_stmt 0 view .LVU144
 480 0030 284B     		ldr	r3, .L32+4
 481 0032 1B68     		ldr	r3, [r3]
 482              		.loc 1 180 8 view .LVU145
 483 0034 022B     		cmp	r3, #2
 484 0036 13D0     		beq	.L30
 485              	.LVL25:
 486              	.L26:
 181:Core/Src/adc.c ****       state = 1;
 182:Core/Src/adc.c ****       end = __HAL_TIM_GetCounter(&htim2);
 183:Core/Src/adc.c ****       int pulse = end - start;
 184:Core/Src/adc.c ****       int bit = pulse > PULSEDIV ? 1 : 0;
 185:Core/Src/adc.c **** 
 186:Core/Src/adc.c ****       
 187:Core/Src/adc.c ****       char buf[8] = {0};
 188:Core/Src/adc.c ****       sprintf(buf, "%d\r\n", bit);
 189:Core/Src/adc.c ****       HAL_UART_Transmit_IT(&huart2, (uint8_t*)buf, sizeof(buf));
 190:Core/Src/adc.c ****       
 191:Core/Src/adc.c ****       data = ((data << 1) | bit);
 192:Core/Src/adc.c ****     }
 193:Core/Src/adc.c ****     
 194:Core/Src/adc.c ****     if (data & HIGHBIT) {
 487              		.loc 1 194 5 is_stmt 1 view .LVU146
 488              		.loc 1 194 14 is_stmt 0 view .LVU147
 489 0038 294B     		ldr	r3, .L32+16
 490 003a 1A68     		ldr	r2, [r3]
 491              		.loc 1 194 8 view .LVU148
 492 003c 12F4803F 		tst	r2, #65536
 493 0040 36D1     		bne	.L31
 494              	.L23:
 195:Core/Src/adc.c ****       char buf[8] = {0};
 196:Core/Src/adc.c ****       sprintf(buf, "%d\r\n", data);
 197:Core/Src/adc.c ****       HAL_UART_Transmit_IT(&huart2, (uint8_t*)buf, sizeof(buf));
 198:Core/Src/adc.c ****       data = 0;
 199:Core/Src/adc.c ****     }
 200:Core/Src/adc.c ****     
 201:Core/Src/adc.c ****     // HAL_ADC_Start_IT(&hadc3);
 202:Core/Src/adc.c **** }
 495              		.loc 1 202 1 view .LVU149
ARM GAS  /tmp/cc9GEf8S.s 			page 14


 496 0042 02B0     		add	sp, sp, #8
 497              	.LCFI11:
 498              		.cfi_remember_state
 499              		.cfi_def_cfa_offset 8
 500              		@ sp needed
 501 0044 10BD     		pop	{r4, pc}
 502              	.LVL26:
 503              	.L29:
 504              	.LCFI12:
 505              		.cfi_restore_state
 176:Core/Src/adc.c ****       state = 2;
 506              		.loc 1 176 20 discriminator 1 view .LVU150
 507 0046 40F6C413 		movw	r3, #2500
 508 004a 9842     		cmp	r0, r3
 509 004c F0D9     		bls	.L25
 177:Core/Src/adc.c ****       start = __HAL_TIM_GetCounter(&htim2);
 510              		.loc 1 177 7 is_stmt 1 view .LVU151
 177:Core/Src/adc.c ****       start = __HAL_TIM_GetCounter(&htim2);
 511              		.loc 1 177 13 is_stmt 0 view .LVU152
 512 004e 214B     		ldr	r3, .L32+4
 513 0050 0222     		movs	r2, #2
 514 0052 1A60     		str	r2, [r3]
 178:Core/Src/adc.c ****     }
 515              		.loc 1 178 7 is_stmt 1 view .LVU153
 178:Core/Src/adc.c ****     }
 516              		.loc 1 178 15 is_stmt 0 view .LVU154
 517 0054 204B     		ldr	r3, .L32+8
 518 0056 1B68     		ldr	r3, [r3]
 519 0058 5A6A     		ldr	r2, [r3, #36]
 178:Core/Src/adc.c ****     }
 520              		.loc 1 178 13 view .LVU155
 521 005a 204B     		ldr	r3, .L32+12
 522 005c 1A60     		str	r2, [r3]
 523 005e E7E7     		b	.L25
 524              	.L30:
 180:Core/Src/adc.c ****       state = 1;
 525              		.loc 1 180 20 discriminator 1 view .LVU156
 526 0060 40F6C313 		movw	r3, #2499
 527 0064 9842     		cmp	r0, r3
 528 0066 E7D8     		bhi	.L26
 529              	.LBB4:
 181:Core/Src/adc.c ****       end = __HAL_TIM_GetCounter(&htim2);
 530              		.loc 1 181 7 is_stmt 1 view .LVU157
 181:Core/Src/adc.c ****       end = __HAL_TIM_GetCounter(&htim2);
 531              		.loc 1 181 13 is_stmt 0 view .LVU158
 532 0068 1A4B     		ldr	r3, .L32+4
 533 006a 0122     		movs	r2, #1
 534 006c 1A60     		str	r2, [r3]
 182:Core/Src/adc.c ****       int pulse = end - start;
 535              		.loc 1 182 7 is_stmt 1 view .LVU159
 182:Core/Src/adc.c ****       int pulse = end - start;
 536              		.loc 1 182 13 is_stmt 0 view .LVU160
 537 006e 1A4B     		ldr	r3, .L32+8
 538 0070 1B68     		ldr	r3, [r3]
 539 0072 5C6A     		ldr	r4, [r3, #36]
 182:Core/Src/adc.c ****       int pulse = end - start;
 540              		.loc 1 182 11 view .LVU161
ARM GAS  /tmp/cc9GEf8S.s 			page 15


 541 0074 1B4B     		ldr	r3, .L32+20
 542 0076 1C60     		str	r4, [r3]
 183:Core/Src/adc.c ****       int bit = pulse > PULSEDIV ? 1 : 0;
 543              		.loc 1 183 7 is_stmt 1 view .LVU162
 183:Core/Src/adc.c ****       int bit = pulse > PULSEDIV ? 1 : 0;
 544              		.loc 1 183 23 is_stmt 0 view .LVU163
 545 0078 184B     		ldr	r3, .L32+12
 546 007a 1B68     		ldr	r3, [r3]
 183:Core/Src/adc.c ****       int bit = pulse > PULSEDIV ? 1 : 0;
 547              		.loc 1 183 11 view .LVU164
 548 007c E41A     		subs	r4, r4, r3
 549              	.LVL27:
 184:Core/Src/adc.c **** 
 550              		.loc 1 184 7 is_stmt 1 view .LVU165
 184:Core/Src/adc.c **** 
 551              		.loc 1 184 38 is_stmt 0 view .LVU166
 552 007e 41F28833 		movw	r3, #5000
 553 0082 9C42     		cmp	r4, r3
 554 0084 D4BF     		ite	le
 555 0086 0024     		movle	r4, #0
 556              	.LVL28:
 184:Core/Src/adc.c **** 
 557              		.loc 1 184 38 view .LVU167
 558 0088 0124     		movgt	r4, #1
 559              	.LVL29:
 187:Core/Src/adc.c ****       sprintf(buf, "%d\r\n", bit);
 560              		.loc 1 187 7 is_stmt 1 view .LVU168
 187:Core/Src/adc.c ****       sprintf(buf, "%d\r\n", bit);
 561              		.loc 1 187 12 is_stmt 0 view .LVU169
 562 008a 0023     		movs	r3, #0
 563 008c 0093     		str	r3, [sp]
 564 008e 0193     		str	r3, [sp, #4]
 188:Core/Src/adc.c ****       HAL_UART_Transmit_IT(&huart2, (uint8_t*)buf, sizeof(buf));
 565              		.loc 1 188 7 is_stmt 1 view .LVU170
 566 0090 2246     		mov	r2, r4
 567 0092 1549     		ldr	r1, .L32+24
 568 0094 6846     		mov	r0, sp
 569              	.LVL30:
 188:Core/Src/adc.c ****       HAL_UART_Transmit_IT(&huart2, (uint8_t*)buf, sizeof(buf));
 570              		.loc 1 188 7 is_stmt 0 view .LVU171
 571 0096 FFF7FEFF 		bl	sprintf
 572              	.LVL31:
 189:Core/Src/adc.c ****       
 573              		.loc 1 189 7 is_stmt 1 view .LVU172
 574 009a 0822     		movs	r2, #8
 575 009c 6946     		mov	r1, sp
 576 009e 1348     		ldr	r0, .L32+28
 577 00a0 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 578              	.LVL32:
 191:Core/Src/adc.c ****     }
 579              		.loc 1 191 7 view .LVU173
 191:Core/Src/adc.c ****     }
 580              		.loc 1 191 21 is_stmt 0 view .LVU174
 581 00a4 0E4B     		ldr	r3, .L32+16
 582 00a6 1A68     		ldr	r2, [r3]
 191:Core/Src/adc.c ****     }
 583              		.loc 1 191 27 view .LVU175
ARM GAS  /tmp/cc9GEf8S.s 			page 16


 584 00a8 44EA4204 		orr	r4, r4, r2, lsl #1
 585              	.LVL33:
 191:Core/Src/adc.c ****     }
 586              		.loc 1 191 12 view .LVU176
 587 00ac 1C60     		str	r4, [r3]
 588 00ae C3E7     		b	.L26
 589              	.L31:
 191:Core/Src/adc.c ****     }
 590              		.loc 1 191 12 view .LVU177
 591              	.LBE4:
 592              	.LBB5:
 195:Core/Src/adc.c ****       sprintf(buf, "%d\r\n", data);
 593              		.loc 1 195 7 is_stmt 1 view .LVU178
 195:Core/Src/adc.c ****       sprintf(buf, "%d\r\n", data);
 594              		.loc 1 195 12 is_stmt 0 view .LVU179
 595 00b0 0024     		movs	r4, #0
 596 00b2 0094     		str	r4, [sp]
 597 00b4 0194     		str	r4, [sp, #4]
 196:Core/Src/adc.c ****       HAL_UART_Transmit_IT(&huart2, (uint8_t*)buf, sizeof(buf));
 598              		.loc 1 196 7 is_stmt 1 view .LVU180
 599 00b6 0C49     		ldr	r1, .L32+24
 600 00b8 6846     		mov	r0, sp
 601 00ba FFF7FEFF 		bl	sprintf
 602              	.LVL34:
 197:Core/Src/adc.c ****       data = 0;
 603              		.loc 1 197 7 view .LVU181
 604 00be 0822     		movs	r2, #8
 605 00c0 6946     		mov	r1, sp
 606 00c2 0A48     		ldr	r0, .L32+28
 607 00c4 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 608              	.LVL35:
 198:Core/Src/adc.c ****     }
 609              		.loc 1 198 7 view .LVU182
 198:Core/Src/adc.c ****     }
 610              		.loc 1 198 12 is_stmt 0 view .LVU183
 611 00c8 054B     		ldr	r3, .L32+16
 612 00ca 1C60     		str	r4, [r3]
 613              	.LBE5:
 614              		.loc 1 202 1 view .LVU184
 615 00cc B9E7     		b	.L23
 616              	.L33:
 617 00ce 00BF     		.align	2
 618              	.L32:
 619 00d0 00000000 		.word	.LANCHOR0
 620 00d4 00000000 		.word	.LANCHOR1
 621 00d8 00000000 		.word	htim2
 622 00dc 00000000 		.word	.LANCHOR2
 623 00e0 00000000 		.word	.LANCHOR4
 624 00e4 00000000 		.word	.LANCHOR3
 625 00e8 00000000 		.word	.LC0
 626 00ec 00000000 		.word	huart2
 627              		.cfi_endproc
 628              	.LFE323:
 630              		.global	hadc3
 631              		.section	.bss.data.0,"aw",%nobits
 632              		.align	2
 633              		.set	.LANCHOR4,. + 0
ARM GAS  /tmp/cc9GEf8S.s 			page 17


 636              	data.0:
 637 0000 00000000 		.space	4
 638              		.section	.bss.end.1,"aw",%nobits
 639              		.align	2
 640              		.set	.LANCHOR3,. + 0
 643              	end.1:
 644 0000 00000000 		.space	4
 645              		.section	.bss.hadc3,"aw",%nobits
 646              		.align	2
 647              		.set	.LANCHOR0,. + 0
 650              	hadc3:
 651 0000 00000000 		.space	100
 651      00000000 
 651      00000000 
 651      00000000 
 651      00000000 
 652              		.section	.bss.start.2,"aw",%nobits
 653              		.align	2
 654              		.set	.LANCHOR2,. + 0
 657              	start.2:
 658 0000 00000000 		.space	4
 659              		.section	.bss.state.3,"aw",%nobits
 660              		.align	2
 661              		.set	.LANCHOR1,. + 0
 664              	state.3:
 665 0000 00000000 		.space	4
 666              		.text
 667              	.Letext0:
 668              		.file 2 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 669              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 670              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 671              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 672              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 673              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 674              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 675              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 676              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 677              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 678              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 679              		.file 13 "Core/Inc/adc.h"
 680              		.file 14 "Core/Inc/usart.h"
 681              		.file 15 "Core/Inc/tim.h"
 682              		.file 16 "/usr/arm-none-eabi/include/stdio.h"
 683              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 684              		.file 18 "Core/Inc/main.h"
 685              		.file 19 "<built-in>"
ARM GAS  /tmp/cc9GEf8S.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/cc9GEf8S.s:18     .text.MX_ADC3_Init:0000000000000000 $t
     /tmp/cc9GEf8S.s:26     .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
     /tmp/cc9GEf8S.s:160    .text.MX_ADC3_Init:0000000000000078 $d
     /tmp/cc9GEf8S.s:167    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cc9GEf8S.s:174    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cc9GEf8S.s:340    .text.HAL_ADC_MspInit:00000000000000a8 $d
     /tmp/cc9GEf8S.s:347    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cc9GEf8S.s:354    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cc9GEf8S.s:401    .text.HAL_ADC_MspDeInit:0000000000000028 $d
     /tmp/cc9GEf8S.s:408    .rodata.HAL_ADC_ConvCpltCallback.str1.4:0000000000000000 $d
     /tmp/cc9GEf8S.s:412    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc9GEf8S.s:419    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc9GEf8S.s:619    .text.HAL_ADC_ConvCpltCallback:00000000000000d0 $d
     /tmp/cc9GEf8S.s:650    .bss.hadc3:0000000000000000 hadc3
     /tmp/cc9GEf8S.s:632    .bss.data.0:0000000000000000 $d
     /tmp/cc9GEf8S.s:636    .bss.data.0:0000000000000000 data.0
     /tmp/cc9GEf8S.s:639    .bss.end.1:0000000000000000 $d
     /tmp/cc9GEf8S.s:643    .bss.end.1:0000000000000000 end.1
     /tmp/cc9GEf8S.s:646    .bss.hadc3:0000000000000000 $d
     /tmp/cc9GEf8S.s:653    .bss.start.2:0000000000000000 $d
     /tmp/cc9GEf8S.s:657    .bss.start.2:0000000000000000 start.2
     /tmp/cc9GEf8S.s:660    .bss.state.3:0000000000000000 $d
     /tmp/cc9GEf8S.s:664    .bss.state.3:0000000000000000 state.3

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
memset
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_ADC_GetValue
sprintf
HAL_UART_Transmit_IT
htim2
huart2
